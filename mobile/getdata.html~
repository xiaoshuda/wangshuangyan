<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
    <title>Test Adapter Mobile Widgets</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">

    <!--jQuery References-->
    
    <script src="js/jquery-1.8.2.min.js" type="text/javascript"></script>
    <script src="js/jquery.mobile-1.2.0.min.js" type="text/javascript"></script>

    <!--Theme-->
    <link href="css/jquery.mobile-1.2.0.min.css" rel="stylesheet" type="text/css" title="rocket-jqueryui">

    <!--Wijmo Widgets CSS-->
    <link href="css/jquery.wijmo-pro.all.3.20131.7.min.css" rel="stylesheet" type="text/css">

    <!--Wijmo Widgets JavaScript-->
    <script src="js/jquery.wijmo-open.all.3.20131.7.min.js" type="text/javascript"></script>
    <script src="js/jquery.wijmo-pro.all.3.20131.7.min.js" type="text/javascript"></script>
	<script>
$(document).ready(function(){
//显示前端数据
// array to read
var testArray = ["c++", "java", "php", "coldfusion", "javascript", "asp", "ruby", "python", "c", "scala", "groovy", "haskell", "perl"];
// create datareader of array
var myReader = new wijarrayreader([{name: 'label'}, {name: 'value'}, {name: 'selected',defaultValue: false}]);
// create datasource
var datasource = new wijdatasource({
    reader: myReader,
    data: testArray,
    loaded: function (data){
                // get items by data.items
                var items = data.items;
            }
});
// load datasource, loaded event will be fired after loading.
datasource.load();

///////////////////////////////////////////////////////////////////////华丽丽的分割线///////////////////////////////////////////////////////////////

//显示后台数据
// define a proxy
var proxy2 = new wijhttpproxy({
            url: "http://ws.geonames.org/searchJSON",
            dataType: "jsonp",
            data: {
                featureClass: "P",
                style: "full",
                maxRows: 12,
                name_startsWith: 'ab'
            },
            key: 'geonames'
        });
// define a reader
var myReader2 = new wijarrayreader([
    {
        name: 'label',
        mapping: function (item){
            return item.name + (item.adminName1 ? ", " + item.adminName1 : "") + ", " + item.countryName
        }
    },
    {name: 'value',mapping: 'name'}]);
// create datasource
var datasource2 = new wijdatasource({
    reader: myReader2,
    proxy: proxy2,
    loaded: function (data){
        // read items.
        var items = data.items;
    }
});
// trigger load.
datasource2.load();


//Simple demo.注意：必须用到服务器，必须要用List来转为json才能显示，直接用一个People对象是不行的，这个我也不知道是为什么） 前台页面主要代码： 
<script type="text/javascript">  $(function() {   
$('#grid').wijgrid( {    //dynamic: true, 
 data: new wijdatasource({ 
        proxy: new wijhttpproxy({
		url:"TestServlet",
		dataType:"json",
		type:"post",
		})
	reader: new wijarrayreader(
		[
			{name:"name",mapping:"name"},
			{name:"age",mapping:"age"}
		])
                 
})		
</script>
</head>
<body>
</body>
</html>
